type Post @goModel(model: "model.Post") {
  id: String!
  createdAt: Time!
  deletedAt: Time
  title: String!
  content: String!
  subSource: SubSource!
  sharedFromPost: Post
  readByUser: [User!]!
  publishedFeeds: [Feed!]!
  cursor: Int!
  # urls to resources
  imageUrls: [String!]!
  fileUrls: [String!]!

  # Time when crawler finished crawling this post
  crawledAt: Time

  # url from where this post is crawled
  originUrl: String

  # actual time content is generated by 3rd party website
  contentGeneratedAt: Time

  # is the post shared by another post, if true, this post will not be published if it is not published
  inSharingChain: Boolean

  # deduplicate id is generated by crawler, purely depends on logic in crawler
  deduplicateId: String!

  semanticHashing: String
  embedding: [Float!]!

  # the parent post of this thread in chronological order, together with this
  # post they form a thread.
  replyThread: [Post!]!

  # tags indicating post content
  tags: [String!]!

  # indicating if the post has been read
  isRead: Boolean!

  # indicating if the post is delayed
  delayed: Boolean!
}
